#!/bin/bash

# Check if a package is installed and return 1 if it is, install if it
# isn't and if the  2nd parameter is true
install_check () {
  if [[ $(equery -q l $1) =~ . ]]; then 
    echo "1"
  else
    if [[ $2 ]]; then
      { 
      emerge -qn $1 
      } &> /dev/null
      echo "1"
    else
      echo "0"
    fi
  fi
}

# Check that the script is running as superuser since we need
# permission to edit files in /etc and /usr.
if [ "$EUID" -ne 0 ]; then 
  echo "Exiting... please run as root."
  exit
fi

# Choose name for a new user
echo -n "Enter name for a new user. Username:"
read username

# Choose "name of computer" for hostname
echo -n "Enter name for computer.   Hostname:"
read hostname

# Enter root password (this is different than user passwords)
echo -n "Enter root password.       Password:"
read root_passwd

# Ask if wifi support is needed 
echo "Do you need wifi support?"
select yn in "Yes" "No"; do
  case $yn in
    Yes ) wifi=1; break;;
    No  ) wifi=0; break;;
  esac
done

# If the OS is Gentoo then we try to detect the CPU and see if this 
# script supports it.
if [[ $(cat /proc/cpuinfo) == *"T2300"* ]]; then
  cpu_type="T2300"
elif [[ $(cat /proc/cpuinfo) == *"i7-2600K"* ]]; then
  cpu_type="i7-2600K"
else
  cpu_type="Your CPU is not supported. Please write your own make.conf"
fi

setup_locales () {
  echo "en_US ISO-8859-1" > /etc/locale.gen
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen
} &> /dev/null

setup_root () {
  echo "root:$root_passwd" | chpasswd
  
  # TODO: move all this to a better place
  cp /etc/fstab /etc/fstab.copy
  if [[ "$cpu_type" == "i7-2600K" ]]; then
    cp etc/fstab /etc/fstab
    cp etc/portage/make.conf /etc/portage/make.conf
  else
    cp etc/fstab.laptop /etc/fstab
    cp etc/portage/make.conf.laptop /etc/portage/make.conf
  fi
} &> /dev/null

setup_sudo () {
  install_check "sudo" true 
  if ! grep -Fxq "$username ALL=(ALL) ALL" /etc/sudoers; then
    echo "$username ALL=(ALL) ALL" >> /etc/sudoers
  fi
} &> /dev/null

setup_portage () {
  if [ ! -d "/usr/portage" ]; then
    mkdir /usr/portage
  fi
  emerge --sync
  set=$((`eselect profile list | grep -n "default.*plasma$" | cut -d : -f 1`-1))
  if [[ ! $set -eq -1 ]]; then
    eval "eselect profile set $set"
  fi
} &> /dev/null

setup_time () { 
  cp /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
} &> /dev/null

setup_kernel () {
  install_check "gentoo-sources"
  eval "eselect kernel set 1"
  install_check "genkernel" true
  eval "genkernel --splash --install all"

  if [[ "$wifi" == "1" ]]; then
    install_check "wicd" true 
  fi
} &> /dev/null

setup_hostname () {
  echo "hostname=\"$hostname\"" > /etc/conf.d/hostname
} &> /dev/null

setup_ethernet () {
  install_check "dhcpcd" true
  if [ ! -e /etc/init.d/net.eth0 ]; then
    if [ -e /etc/init.d/net.lo ]; then
      ln -s /etc/init.d/net.lo /etc/init.d/net.eth0
      rc-update add net.eth0 default
    fi
  else
    rc-update add net.eth0 default
  fi
} &> /dev/null

setup_logger () {
  install_check "syslog-ng" true
  rc-update add syslog-ng default
} &> /dev/null

setup_cron () {
  install_check "vixie-cron" true
  rc-update add vixie-cron default
} &> /dev/null

setup_grub () {
  install_check "grub" true
  mount /boot
  grub2-install /dev/sda
  grub2-mkconfig -o /boot/grub/grub.cfg
} &> /dev/null

setup_misc () {
  echo "set bell-style none" >> /etc/inputrc
  mkdir -p /home/$username/coding/git/mine
  mkdir -p /home/$username/downloads
  mkdir -p /home/$username/games
  mkdir -p /home/$username/music
  mkdir -p /home/$username/images
}

main_install () {
  echo -n "0%"
  setup_root
  echo -en "\r6%"
  setup_sudo
  echo -en "\r12%"
  setup_locales
  echo -en "\r18%"
  setup_portage
  echo -en "\r24%"
  setup_time
  echo -en "\r30%"
  setup_kernel
  echo -en "\r70%"
  setup_hostname
  echo -en "\r76%"
  setup_ethernet
  echo -en "\r82%"
  setup_logger
  echo -en "\r88%"
  setup_cron
  echo -en "\r94%"
  setup_grub
  echo -e "\r100%"
  setup_misc
}

echo -e "Installing and configuring packages.\nPlease wait..."
main_install
echo "Installation completed." 

echo $is_gentoo
echo $cpu_type
echo $username
echo $hostname
echo $root_passwd
echo $wifi
